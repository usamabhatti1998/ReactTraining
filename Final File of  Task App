
  import ToDo from '../Components/ToDo.js' 
  import Test from '../Components/Test.js' 
  import '../Stylesheets/AppStylesheet.css'
  import {useState, useEffect} from 'react'
  import {render} from 'react-dom'
  import {cloneDeep} from "lodash"

  import Modal from '../Components/Modal.js' 

  export default function ToDoApp(props) {
    //states declared
    const [state, setState] = useState(false)
    const [modalState, setModalState] = useState(false)
    const [cardData, setCardData] = useState([{id:"222", text:"Pehla Card"},{id:"111", text:"Second Card"},{id:"333", text:"third Card"},{id:"89", text:"HELLLOOOO"},{id:"98213", text:"HELAOSI"},{id:"7757", text:"YEKNASDJLJ"} ])
    const [TaskID, setTaskID] = useState(" ")
    const [TaskText, setTaskText] = useState(" ")
    const [editStatus, setEditStatus] = useState(" ")
    const [update, setUpdate] = useState(false) //open update window if true
    const [formValue, setFormValue] = useState(" ")
    const [UpdatedText,setUpdatedText] = useState(" ")
    const [cardIndex, setCardIndex] = useState(" ")
    

    //update  card data
    function updateCardData() {
      console.log("New text is " ,UpdatedText)
      console.log("New Value  is " ,formValue)
    
      let list1 = cloneDeep(cardData);
      console.log("before" , formValue.text)
      list1[cardIndex].text = UpdatedText
      console.log("After",formValue.text)
      setCardData(list1)
      setModalState(false)
      setUpdate(false)
    }

  


  function showStates() {

    console.log("Value in TaskID is ", TaskID);
    console.log("Value in Task Text  is " , TaskText);
    let entry = {id:TaskID, text:TaskText};//creating a new entry 
    console.log(entry) 
    let list = cloneDeep(cardData); //copying main string
    list.push(entry); // appending the new entry in string
    setCardData(list) ;//assinging new value to state
    setModalState(false)
    setUpdate(false)


  }

    // ADD NEW Click
    function createNewCard()
    { setModalState(true) }

    function BacktoHome()
    {   setModalState(false)
      setUpdate(false)}

    //upadte handler
    function UpdateHandler(INDEX) 
    { console.log(TaskID) //111
      setFormValue(cardData[INDEX])
      setCardIndex(INDEX)
      setModalState(false)
      setUpdate(true)

    }

    //delete function 
    function DeleteHandler(ID)
    { 

  for (let i=0;i<cardData.length;i++) { 
    if (cardData[i].id === ID )
    {   
      let Card = cloneDeep(cardData)
      let NewCard =  Card.splice(i,1)
      console.log(NewCard)
      console.log(Card)
      setCardData(Card)
      console.log("Your Index is ", i)
      break;
    } 
  } //end for loop

      
      } //function end

    // on Save Button 
    function  newTaskSave() 
    { console.log("You Tried Saving New One") }    
          

  if (modalState) {
    return (
      <div> 
            {/* <h1> Enter New Task</h1>  */}
            <button className="mainButton" id='addNew' onClick={createNewCard}> ADD New </button>
            <div id="mainDiv">
          <div className="cardDiv" id="cardDiv">
              <button className="btns" onClick={BacktoHome} > Cancel </button>
              <input required className="modalInput" placeholder="Enter ID" onChange={event => setTaskID(event.target.value)} />
              <input required className="modalInput"  placeholder="Enter Task" onChange={event => setTaskText(event.target.value)}  />
              <br />
              <button className="btns" onClick={showStates}  > Save</button>
          </div>
    
  </div> 
      </div> );
  

  } //end if




  

  else {

    if(update) {
      return (
        <div> 
          <button className="mainButton" id='addNew' onClick={createNewCard}> Add New </button>
            <div id="mainDiv">
          <div className="cardDiv" id="cardDiv">
              <button className="btns" onClick={BacktoHome} > Cancel </button>
              <input required className="modalInput" defaultValue={formValue.id}   />
              <input required className="modalInput" defaultValue={formValue.text} placeholder="Enter Task"  onChange={event => setUpdatedText(event.target.value)}  />
              <br />
              <button className="btns" onClick={updateCardData}  > Update</button>
          </div>
    
  </div> 
        </div>
          );


    }



    else {
      return (

      
        <div> 
          <button  className="mainButton" id='addNew' onClick={createNewCard} > ADD New</button>
          {cardData.map((pages, index) => (
                        
                  <div key={`contentCard-${index}`} className="cardDiv" id="cardDiv">
                      <button className="btns" onClick={() => UpdateHandler(index,pages.id)} > Edit</button> 
                      <p> <b> Card No. {index}</b> </p>
                      <p> ID: {pages.id}  </p>
                      <p> {pages.text}  </p>
                      <br />
                      <button className="btns"  onClick={() => DeleteHandler(pages.id)} > Delete</button>
                  </div>
    
      ))}
        </div>
          );
      
    }
 

  } //end else
  } //end function
